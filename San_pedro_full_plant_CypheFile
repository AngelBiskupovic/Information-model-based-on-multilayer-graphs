CREATE (:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "PC mining PUC"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(:Network:`Physical Devices`:`IT Devices`:Router {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Aggregate throughput`: "", DRAM: "", `Flash Memory`: "", Interfaces: "", Name: "Router PUC"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication Protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "Historiam M"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", DIrection: "", Status: ""}]->(:Network:`Physical Devices`:`IT Devices`:Router {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Aggregate throughput`: "", DRAM: "", `Flash Memory`: "", Interfaces: "", Name: "EdgeRoute Infinity"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(`Firewall IT`:Network:`Physical Devices`:`IT Devices`:Firewall {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", Throughput: "", `Maximum concurrent session`: "", `Maximum new connections per second`: "", `URL Filtering`: "", TLS: "", `Maximum VPN peers`: "", Name: "Firewall IT"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(:Network:`Physical Devices`:`IT Devices`:Router {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Aggregate throughput`: "", DRAM: "", `Flash Memory`: "", Interfaces: "", Name: "Router D-link"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(`Monitoring Station`:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "Monitoring Station"})<-[:is_implemented {`software used`: ""}]-(`Human Interface`:Cloud:Cloud:Service:`Human Interface` {`Type of human interface`: "", `Sample Time`: "", Name: "Human Interface"}),
(Database:Cloud:Cloud:Service:Database {`Type database`: "", `Sample Time`: "", Name: "Database"})-[:is_implemented {`software used`: ""}]->(`Historiam A`:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "Historiam A"})-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(`Firewall OT`:Network:`Physical Devices`:`IT Devices`:Firewall {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", Throughput: "", `Maximum concurrent session`: "", `Maximum new connections per second`: "", `URL Filtering`: "", TLS: "", `Maximum VPN peers`: "", Name: "Firewall OT"})<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]-(`Firewall IT`)-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(`Monitoring Station`),
(`Bus service`:Cloud:Cloud:Service:`Bus service` {`Communication protocol`: "", `Sample Time`: "", Name: "Bus Service"})-[:is_implemented {`software used`: ""}]->(:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "OPC Server"})<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]-(`Switch OT`:Network:`Physical Devices`:`IT Devices`:Switch {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Forwarding bandwidth`: "", `Switching bandwidth`: "", `Flash Memory`: "", DRAM: "", `PoE/PoE+`: "", Interfaces: "", Name: "Switch OT"})<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]-(`Firewall OT`)<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]-(`Historiam B`:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "Historiam B"})<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]-(`Firewall IT`)-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(`Historiam A`),
(Mediator:Cloud:Cloud:Service:Mediator {`Communication protocol from sensor`: "", `Communication protocol to bus service`: "", `Sample Time`: "", Name: "Mediator"})-[:is_implemented {`software used`: ""}]->(:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "Operation Station"})<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]-(`Switch OT`)-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(`Engineering Station`:Network:`Physical Devices`:`IT Devices`:Server {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Operating System`: "", `Hard Drive`: "", RAM: "", GPU: "", Cores: "", Name: "Engineering Station"})<-[:is_implemented {`software used`: ""}]-(Controller:Cloud:Cloud:Service:Controller {`Communication protocol`: "", `Sample Time`: "", Name: "Controller", `Type controller`: "", Parameters: ""}),
(PLC:plc:`control-devices`:`physical-devices` {name: "plc1", brand: "", model: "", dimension: "", `power supply`: "", interfaces: "", `communication protocol`: "", `digital i/o`: "", `analog i/o`: "", `programming language`: "", display: ""})-[:Data_flow]->(:Network:`Physical Devices`:`IT Devices`:Switch {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Forwarding bandwidth`: "", `Switching bandwidth`: "", `Flash Memory`: "", DRAM: "", `PoE/PoE+`: "", Interfaces: "", Name: "Switch PLC-2"})<-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", DIrection: "", Status: ""}]-(`Switch OT`)-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(:Network:`Physical Devices`:`IT Devices`:Switch {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Forwarding bandwidth`: "", `Switching bandwidth`: "", `Flash Memory`: "", DRAM: "", `PoE/PoE+`: "", Interfaces: "", Name: "Switch PLC-3"})-[:Data_flow {`Output port number`: "", `Input port number`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", direction: "", Status: ""}]->(`PLC-Tailings`:`Physical Devices`:`Control Devices`:PLC {Name: "PLC-Tailings", Brand: "", Model: "", `Physical dimensions`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Digital I/O`: "", `Analog I/O`: "", `Programming language`: "", Display: ""}),
(`Switch OT`)-[:Data_flow {`Output nozzle`: "", `Input nozzle`: "", `Destination IP`: "", `Next IP`: "", `Communication protocol`: "", `Wire connection`: "", Direction: "", Status: ""}]->(:Network:`Physical Devices`:`IT Devices`:Switch {Brand: "", Model: "", `Physical Dimensions`: "", `Power Supply`: "", `Operating temperature`: "", `Operating altitude`: "", `Forwarding bandwidth`: "", `Switching bandwidth`: "", `Flash Memory`: "", DRAM: "", `PoE/PoE+`: "", Interfaces: "", Name: "Switch PLC-1"}),
(Mediator)-[:Information_flow {`Sample Time`: "", `From (physical location)`: "", `To (physical location)`: ""}]->(`Bus service`)-[:Information_flow {`Sample Time`: "", `From (physical location)`: "", `To (physical location)`: ""}]->(Controller),
(`Human Interface`)<-[:Information_flow {`Sample Time`: "", `From (physical location)`: "", `To ( physical location)`: ""}]-(`Bus service`)-[:Information_flow {`Sample Time`: "", `From (physical location)`: "", `To (physical location)`: ""}]->(Database)-[:is_implemented {`software used`: ""}]->(`Historiam B`),
(n24:`Physical Devices`:`Process Devices`:Agitator {Name: "Agitator", Brand: "", Model: "", `Physical dimensions`: "", `Standard agitator`: "", `Volume wood tank`: "", `Volume per Ft depth`: "", `Weight Belt driven machine`: "", `Weight motor driven machine`: "", `Vol Cu`: "", Pressure: ""})<-[:has_equipment]-(Tailings:Process {Name: "Tailings", Stage: 4, Task: ""})-[:has_equipment]->(`Flocculant pump`:`Physical Devices`:`Process Devices`:Pump {Name: "Flocculant pump", Brand: "", Model: "", `Physical dimensions`: "", Capacity: "", Head: "", `Liquid Temp`: "", `Outlet diam`: "", Pressure: ""})-[:Flow_process]->(n24)-[:Flow_process]->(`Discharge pump`:`Physical Devices`:`Process Devices`:Pump {Name: "Discharge pump", Brand: "", Model: "", `Physical dimensions`: "", Capacity: "", Head: "", `Liquid Temp`: "", `Outlet diam`: "", Pressure: ""})-[:Flow_process]->(Thickener:`Physical Devices`:`Process Devices`:Thickener {Name: "Thickener", Brand: "", Model: "", `Physical dimensions`: "", Capacity: "", `Cone angle`: "", Diameter: "", `Flocculant dosing use`: "", `Solid loading`: "", `Yield stress`: ""})-[:has_sensor]->(`Input flow sensor`:`Physical Devices`:`Control Devices`:Sensor {Name: "Input flow sensor", Brand: "", Model: "", `Physical dimensions`: "", `Type of sensor`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name (ID)`: "", Status: ""})-[:Data_flow]->(`PLC-Tailings`)<-[:Data_flow]-(`Level tank sensor`:`Physical Devices`:`Control Devices`:Sensor {Name: "Level tank sensor", Brand: "", Model: "", `Physical dimensions`: "", `Type of sensor`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name (ID)`: "", Status: ""})<-[:has_equipment]-(Tailings)-[:has_equipment]->(`Output pump`:`Physical Devices`:`Process Devices`:Pump {Name: "Output pump", Brand: "", Model: "", `Physical dimensions`: "", Capacity: "", Head: "", `Liquid Temp`: "", `Outlet diam`: "", Pressure: ""}),
(`Motor discharge pump`:`Physical Devices`:`Process Devices`:Motor {Name: "Motor discharge pump", Brand: "", Model: "", `Physical dimensions`: "", Voltage: "", Phases: "", Connection: "", `Frame size`: "", Poles: "", `Output Power`: "", Current: "", Frequency: "", Temperature: ""})<-[:has_equipment]-(Tailings)-[:has_equipment]->(:`Physical Devices`:`Process Devices`:Motor {Name: "Motor flocculant pump", Brand: "", Model: "", `Physical dimensions`: "", Voltage: "", Phases: "", Connection: "", `Frame size`: "", Poles: "", `Output Power`: "", Current: "", Frequency: "", Temperature: ""})-[:Flow_process]->(`Flocculant pump`),
(`Motor thickener`:`Physical Devices`:`Process Devices`:Motor {Name: "Motor thickener", Brand: "", Model: "", `Physical dimensions`: "", Voltage: "", Phases: "", Connection: "", `Frame size`: "", Poles: "", `Output Power`: "", Current: "", Frequency: "", Temperature: ""})<-[:has_equipment]-(Tailings)-[:has_equipment]->(`Flocculant flow sensor`:`Physical Devices`:`Control Devices`:Sensor {Name: "Flocculant flow sensor", Brand: "", Model: "", `Physical dimensions`: "", `Type of sensor`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name (ID)`: "", Status: ""})-[:Data_flow]->(`PLC-Tailings`)-[:Data_flow]->(`Actuator motor thickener`:`Physical Devices`:`Control Devices`:Actuator {Name: "Actuator motor thickener", Brand: "", Model: "", `Physical dimensions`: "", `Type of actuator`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name(ID)`: "", Status: ""})<-[:has_actuator]-(`Motor thickener`)-[:Flow_process]->(Thickener)-[:Flow_process]->(`Thickener pump`:`Physical Devices`:`Process Devices`:Pump {Name: "Thickener pump", Brand: "", Model: "", `Physical dimensions`: "", Capacity: "", Head: "", `Liquid Temp`: "", `Outlet diam`: "", Pressure: ""})<-[:Flow_process]-(`Motor thickener pump`:`Physical Devices`:`Process Devices`:Motor {Name: "Motor thickener pump", Brand: "", Model: "", `Physical dimensions`: "", Voltage: "", Phases: "", Connection: "", `Frame size`: "", Poles: "", `Output Power`: "", Current: "", Frequency: "", Temperature: ""})-[:has_actuator]->(`Actuator thickener pump`:`Physical Devices`:`Control Devices`:Actuator {Name: "Actuator thickener pump", Brand: "", Model: "", `Physical dimensions`: "", `Type of actuator`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name(ID)`: "", Status: ""})<-[:Data_flow]-(`PLC-Tailings`)-[:Data_flow]->(`Actuator motor output pump`:`Physical Devices`:`Control Devices`:Actuator {Name: "Actuator motor output pump", Brand: "", Model: "", `Physical dimensions`: "", `Type of actuator`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name(ID)`: "", Status: ""})<-[:has_equipment]-(Tailings)-[:has_equipment]->(Thickener)<-[:Flow_process]-(n194:pipe:`process-devices`:`physical-devices` {name: "pipe7", brand: "", model: "", dimension: "", type: "pipe", material: ""}),
(`Actuator motor thickener`)<-[:has_equipment]-(Tailings)-[:has_equipment]->(`Discharge pump`)<-[:Flow_process]-(`Motor discharge pump`)-[:has_actuator]->(`Actuator motor discharge`:`Physical Devices`:`Control Devices`:Actuator {Name: "Actuator motor discharge", Brand: "", Model: "", `Physical dimensions`: "", `Type of actuator`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name(ID)`: "", Status: ""})<-[:Data_flow]-(`PLC-Tailings`)<-[:Data_flow]-(`Output flow sensor`:`Physical Devices`:`Control Devices`:Sensor {Name: "Output flow sensor", Brand: "", Model: "", `Physical dimensions`: "", `Type of sensor`: "", Unit: "", `Power supply`: "", `Operating range`: "", `Operating temperature`: "", Interfaces: "", `Communication protocol`: "", `Name (ID)`: "", Status: ""})<-[:has_equipment]-(Tailings)<-[:has_process]-(`San Pedro mining`:Plant {Name: "San Pedro", Location: "Region Metropolitana", `Type of plant`: "Mineral processing"}),
(`Actuator motor output pump`)<-[:has_actuator]-(`Motor output pump`:`Physical Devices`:`Process Devices`:Motor {Name: "Motor output pump", Brand: "", Model: "", `Physical dimensions`: "", Voltage: "", Phases: "", Connection: "", `Frame size`: "", Poles: "", `Output Power`: "", Current: "", Frequency: "", Temperature: ""})-[:Flow_process]->(`Output pump`)-[:has_sensor]->(`Output flow sensor`),
(Thickener)-[:has_sensor]->(`Flocculant flow sensor`),
(`Motor output pump`)<-[:has_equipment]-(Tailings)-[:has_equipment]->(`Thickener pump`)-[:Flow_process]->(n41:`Physical Devices`:`Process Devices`:Agitator {Name: "Agitator", Brand: "", Model: "", `Physical dimensions`: "", `Standard agitator`: "", `Volume wood tank`: "", `Volume per Ft depth`: "", `Weight Belt driven machine`: "", `Weight motor driven machine`: "", `Vol Cu`: "", Pressure: ""})-[:Flow_process]->(`Output pump`),
(Tailings)-[:has_equipment]->(n41)-[:has_sensor]->(`Level tank sensor`),
(`PLC-Tailings`)<-[:has_equipment]-(Tailings)-[:has_equipment]->(`Actuator motor discharge`),
(`Input flow sensor`)<-[:has_equipment]-(Tailings)-[:has_equipment]->(`Actuator thickener pump`),
(Tailings)-[:has_equipment]->(`Motor thickener pump`),
(n152:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor7", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n62:gutter:`process-devices`:`physical-devices` {name: "gutter2-b", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n48:cell:`process-devices`:`physical-devices` {name: "rougher6", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_actuator]->(n55:actuator:`control-devices`:`physical-devices` {name: "level-valve10", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)<-[:send_data]-(n116:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor13", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n350:variable:logical {`variable name`: "cell-level13", type: "", `sample time`: "", `operation range`: ""}),
(n287:variable:logical {`variable name`: "cell-level11", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n109:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor11", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n106:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level ", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n51:cell:`process-devices`:`physical-devices` {name: "rougher3", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:flow_process]->(n59:gutter:`process-devices`:`physical-devices` {name: "gutter1-b", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n52:cell:`process-devices`:`physical-devices` {name: "rougher4", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n107:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level ", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n108:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor5", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level ", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n214:variable:logical {`variable name`: "cell-level5", type: "controlled", `sample time`: "", `operation range`: ""}),
(n108)<-[:has_sensor]-(n53:cell:`process-devices`:`physical-devices` {name: "rougher5", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:flow_process]->(n59)<-[:flow_process]-(n50:cell:`process-devices`:`physical-devices` {name: "rougher2", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n105:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level ", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n110:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor12", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n278:variable:logical {`variable name`: "cell-level12", type: "controlled", `sample time`: "", `operation range`: ""}),
(n328:variable:logical {`variable name`: "cell-level9", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n114:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor9", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n111:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor6", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n44:cell:`process-devices`:`physical-devices` {name: "rougher6", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:flow_process]->(n62)<-[:flow_process]-(n45:cell:`process-devices`:`physical-devices` {name: "rougher6", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n112:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor7", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n113:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor8", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n330:variable:logical {`variable name`: "cell-velvel8", type: "controlled", `sample time`: "", `operation range`: ""}),
(n113)<-[:has_sensor]-(n46:cell:`process-devices`:`physical-devices` {name: "rougher6", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:flow_process]->(n62)<-[:flow_process]-(n47:cell:`process-devices`:`physical-devices` {name: "rougher6", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n114),
(n262:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor10", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor10", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n192:pipe:`process-devices`:`physical-devices` {name: "pipe10", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:flow_process]->(:well:`process-devices`:`physical-devices` {name: "well1", brand: "", model: "", dimension: "", type: "well", `presence of flow control element`: ""})-[:flow_process]->(n64:pump:`process-devices`:`physical-devices` {name: "pump1", brand: "", model: "", dimension: "", type: "pump", capacity: "", head: "", `liquid temperature`: "", `outlet diameter`: "", pressure: ""})-[:flow_process]->(n67:cell:`process-devices`:`physical-devices` {name: "", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "cleaner", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n118:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor15", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n119:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor16", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n380:variable:logical {`variable name`: "cell-level16", type: "controlled", `sample time`: "", `operation range`: ""}),
(n395:variable:logical {`variable name`: "valve-water-flow-aperture2", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n163:actuator:`control-devices`:`physical-devices` {name: "water-flow-valve2", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n61:cell:`process-devices`:`physical-devices` {name: "", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "cleaner", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:flow_process]->(n193:pipe:`process-devices`:`physical-devices` {name: "pipe9", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:flow_process]->(n65:well:`process-devices`:`physical-devices` {name: "well2", brand: "", model: "", dimension: "", type: "well", `presence of flow control element`: ""})-[:flow_process]->(n82:pump:`process-devices`:`physical-devices` {name: "pump2", brand: "", model: "", dimension: "", type: "pump", capacity: "", head: "", `liquid temperature`: "", `outlet diameter`: "", pressure: ""})-[:flow_process]->(delivery:`delivery-drawer`:`process-devices`:`physica-devices` {name: "delivery-drawer1", brand: "", model: "", dimension: "", type: "delivery drawer", `presence of flow control element`: ""})-[:has_sensor]->(`FS-feed`:sensor:`control-devices`:`physical-devices` {name: "feed-flow-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:is_implemented]-(n403:controller:logical {`controller name`: "feed-flow-controller1", type: "", `sample time`: "", parameters: ""}),
(:hidrociclones:`process-devices`:`physical-devices` {name: "hydrocyclone1", brand: "", model: "", dimension: "", type: "hydrocyclone", `type of hydrocyclone`: "", subtype: "", vortex: "", apex: ""})-[:flow_process]->(delivery)-[:has_actuator]->(`VF-feed`:actuator:`control-devices`:`physical-devices` {name: "feed-flow-valve1", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:action_in]-(n401:variable:logical {`variable name`: "valve-feed-flow-aperture1", type: "manipulated", `sample time`: "", `operating range`: ""}),
(n176:variable:logical {`variable name`: "valve-air-flow-aperture2", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n76:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve2", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n50)<-[:flow_process]-(n49:cell:`process-devices`:`physical-devices` {name: "rougher1", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "rougher", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_actuator]->(n91:actuator:`control-devices`:`physical-devices` {name: "level-valve1", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)<-[:send_data]-(n103:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level ", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n49)-[:flow_process]->(n59)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n89:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n51)-[:has_actuator]->(n93:actuator:`control-devices`:`physical-devices` {name: "level-valve3", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n92:actuator:`control-devices`:`physical-devices` {name: "level-valve2", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n50)-[:flow_process]->(n51)-[:flow_process]->(n52)-[:flow_process]->(n53),
(n56:cell:`process-devices`:`physical-devices` {name: "scavenger1", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "scavenger", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_actuator]->(n95:actuator:`control-devices`:`physical-devices` {name: "level-valve11", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n94:actuator:`control-devices`:`physical-devices` {name: "level-valve4", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n52),
(n270:variable:logical {`variable name`: "air-flow12", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n131:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor12", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n130:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor11", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n56)-[:has_sensor]->(n109),
(n131)<-[:has_sensor]-(n57:cell:`process-devices`:`physical-devices` {name: "scavenger2", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "scavenger", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n110),
(n148:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor8", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor7", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n194)<-[:flow_process]-(n57)-[:has_actuator]->(n58:actuator:`control-devices`:`physical-devices` {name: "level-valve12", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n54:actuator:`control-devices`:`physical-devices` {name: "level-valve5", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})-[:flow_process]->(n56)<-[:flow_process]-(n179:pipe:`process-devices`:`physical-devices` {name: "pipe2", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n252:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow ", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n253:pipe:`process-devices`:`physical-devices` {name: "pipe4", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:flow_process]->(n44)-[:has_actuator]->(n70:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve6", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)<-[:send_data]-(n129:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor10", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n48)-[:has_sensor]->(n115:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor10", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)-[:send_data]->(n98:actuator:`control-devices`:`physical-devices` {name: "level-valve6", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n44)-[:flow_process]->(n45)-[:flow_process]->(n46)-[:flow_process]->(n47)-[:flow_process]->(n48)-[:has_actuator]->(n74:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve10", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:action_in]-(n341:variable:logical {`variable name`: "valve-air-flow-aperture10", type: "manipulated", `sample time`: "", `operation range`: ""}),
(n339:variable:logical {`variable name`: "valve-air-flow-aperture8", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n72:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve8", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n46)-[:has_actuator]->(n100:actuator:`control-devices`:`physical-devices` {name: "level-valve8", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n99:actuator:`control-devices`:`physical-devices` {name: "level-valve7", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n45)-[:has_actuator]->(n71:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve7", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:action_in]-(n337:variable:logical {`variable name`: "valve-air-flow-aperture7", type: "manipulated", `sample time`: "", `operation range`: ""}),
(n117:sensor:`control-devices`:`physical-devices` {name: "cell-level-sensor14", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)-[:send_data]->(n101:actuator:`control-devices`:`physical-devices` {name: "level-valve9", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n47)-[:has_actuator]->(n73:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve9", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:action_in]-(n293:variable:logical {`variable name`: "valve-air-flow-aperture9", type: "manipulated", `sample time`: "", `operation range`: ""}),
(n361:variable:logical {`variable name`: "air-flow14", type: "", `sample time`: "", `operation range`: ""})-[:is_measured]->(n133:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor14", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n132:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor13", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n60:cell:`process-devices`:`physical-devices` {name: "", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "cleaner", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n116)<-[:is_measured]-(n359:variable:logical {`variable name`: "cell-level14", type: "", `sample time`: "", `operation range`: ""}),
(n133)<-[:has_sensor]-(n61)-[:has_sensor]->(n117),
(n343:variable:logical {`variable name`: "valve-air-flow-aperture13", type: "", `sample time`: "", `operation range`: ""})-[:action_in]->(n80:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve13", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n60)-[:has_actuator]->(n162:actuator:`control-devices`:`physical-devices` {name: "water-flow-valve1", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)<-[:send_data]-(n135:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor16", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n68:cell:`process-devices`:`physical-devices` {name: "", brand: "", model: "", dimension: "", type: "cell", `flotation type`: "cleaner", `cell type`: "", `air injection type`: "", `motor type`: "", `cell border height`: "", `rotor height`: ""})-[:has_sensor]->(n119),
(n362:variable:logical {`variable name`: "valve-air-flow-aperture14", type: "", `sample time`: "", `operation range`: ""})-[:action_in]->(n81:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve14", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n61)-[:has_actuator]->(n66:actuator:`control-devices`:`physical-devices` {name: "level-valve14", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n96:actuator:`control-devices`:`physical-devices` {name: "level-valve13", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n60)<-[:flow_process]-(n197:pipe:`process-devices`:`physical-devices` {name: "pipe12", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor12", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n264:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor10", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n159:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor11", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "density-flow-sensor12", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n197)<-[:flow_process]-(n68)-[:has_actuator]->(n69:actuator:`control-devices`:`physical-devices` {name: "level-valve16", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n97:actuator:`control-devices`:`physical-devices` {name: "level-valve15", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n67)-[:flow_process]->(n68),
(n76)<-[:send_data]-(PLC)-[:send_data]->(n75:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve1", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n49)<-[:flow_process]-(n249:pipe:`process-devices`:`physical-devices` {name: "pipe1", brand: "", model: "", dimension: "", type: "pipe", material: ""})<-[:flow_process]-(delivery)-[:flow_process]->(n253)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n186:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor5", brand: "", model: "", dimension: "", status: "", `type of sensor`: "", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n52)-[:has_actuator]->(n78:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve4", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n77:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve3", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n51),
(n174:variable:logical {`variable name`: "air-flow2", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n121:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor2", brand: "", model: "", dimension: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)-[:send_data]->(n79:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve5", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n53)-[:has_actuator]->(n54)<-[:action_in]-(n232:variable:logical {`variable name`: "valve-level-aperture5", type: "manipulated", `sample time`: "", `operation range`: ""}),
(n50)-[:flow_process]->(n136:gutter:`process-devices`:`physical-devices` {name: "gutter1-a", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n49)-[:has_sensor]->(n120:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor1", brand: "", model: "", dimension: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n122:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor3", brand: "", model: "", dimension: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n245:variable:logical {`variable name`: "air-flow3", type: "controlled", `sample time`: "", `operation range`: ""}),
(n50)-[:has_sensor]->(n121),
(n52)-[:flow_process]->(n136)<-[:flow_process]-(n51)-[:has_sensor]->(n122),
(n52)-[:has_sensor]->(n124:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor4", brand: "", model: "", dimension: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n123:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor5", brand: "", model: "", dimension: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n241:variable:logical {`variable name`: "air-flow5", type: "controlled", `sample time`: "", `operation range`: ""}),
(n89)<-[:has_sensor]-(n136)<-[:flow_process]-(n53)-[:has_sensor]->(n123),
(n45)-[:flow_process]->(n139:gutter:`process-devices`:`physical-devices` {name: "gutter2-a", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n44)-[:has_sensor]->(n125:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor6", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n126:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor7", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n336:variable:logical {`variable name`: "air-flow7", type: "controlled", `sample time`: "", `operation range`: ""}),
(n45)-[:has_sensor]->(n126),
(n47)-[:flow_process]->(n139)<-[:flow_process]-(n46)-[:has_sensor]->(n127:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor8", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n128:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor9", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n291:variable:logical {`variable name`: "air-flow9", type: "controlled", `sample time`: "", `operation range`: ""}),
(n47)-[:has_sensor]->(n128),
(n72)<-[:send_data]-(PLC)-[:send_data]->(n71),
(n74)<-[:send_data]-(PLC)-[:send_data]->(n73),
(n57)-[:has_actuator]->(n86:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve12", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n85:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve11", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n56)-[:flow_process]->(n57),
(n170:actuator:`control-devices`:`physical-devices` {name: "motor2", brand: "", model: "", dimension: "", status: "", `type of actuator`: "motor", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)<-[:send_data]-(n169:sensor:`control-devices`:`physical-devices` {name: "water-flow-sensor4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "water flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n68)-[:flow_process]->(n154:gutter:`process-devices`:`physical-devices` {name: "gutter5-a", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n67)-[:has_sensor]->(n134:sensor:`control-devices`:`physical-devices` {name: "air-flow-sensor15", brand: "", model: "", dimension: "", status: "", `type of sensor`: "air flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)-[:send_data]->(n163),
(n81)<-[:send_data]-(PLC)-[:send_data]->(n80),
(n68)-[:has_actuator]->(n84:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve16", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:send_data]-(PLC)-[:send_data]->(n83:actuator:`control-devices`:`physical-devices` {name: "air-flow-valve15", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n67),
(n56)<-[:flow_process]-(n184:pipe:`process-devices`:`physical-devices` {name: "pipe5", brand: "", model: "", dimension: "", type: "pipe", material: ""})<-[:flow_process]-(n48)-[:flow_process]->(n139)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n141:sensor:`control-devices`:`physical-devices` {name: "camera2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "digital camera", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n153:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor8", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n195:sensor:`control-devices`:`physical-devices` {name: "camera3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "digital camera", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n144:gutter:`process-devices`:`physical-devices` {name: "gutter3-b", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n56)-[:flow_process]->(n145:gutter:`process-devices`:`physical-devices` {name: "gutter3-a", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n57)-[:flow_process]->(n144)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor6", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n191:sensor:`control-devices`:`physical-devices` {name: "camera4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "digital camera", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n195)<-[:has_sensor]-(n145)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor5", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n156:sensor:`control-devices`:`physical-devices` {name: "gutter-level-sensor9", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n191)<-[:has_sensor]-(n150:gutter:`process-devices`:`physical-devices` {name: "gutter4-b", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n60)-[:flow_process]->(n149:gutter:`process-devices`:`physical-devices` {name: "gutter4-a", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n61)-[:flow_process]->(n150)-[:has_sensor]->(n153),
(n191)<-[:has_sensor]-(n149)-[:has_sensor]->(n152),
(n385:variable:logical {`variable name`: "valve-water-flow-aperture4", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n164:actuator:`control-devices`:`physical-devices` {name: "water-flow-valve4", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n68)-[:flow_process]->(n155:gutter:`process-devices`:`physical-devices` {name: "gutter5-b", brand: "", model: "", dimension: "", type: "gutter"})<-[:flow_process]-(n67)-[:has_sensor]->(n168:sensor:`control-devices`:`physical-devices` {name: "water-flow-sensor3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "water flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)-[:send_data]->(n171:actuator:`control-devices`:`physical-devices` {name: "motor1", brand: "", model: "", dimension: "", status: "", `type of actuator`: "motor", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""}),
(n159)<-[:has_sensor]-(n198:pipe:`process-devices`:`physical-devices` {name: "pipe11", brand: "", model: "", dimension: "", type: "pipe", material: ""})<-[:flow_process]-(n155)-[:has_sensor]->(n158:sensor:`control-devices`:`physical-devices` {name: "camera5", brand: "", model: "", dimension: "", status: "", `type of sensor`: "digital camera", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n154)-[:has_sensor]->(n156),
(n155)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "gutter-levelsensor10", brand: "", model: "", dimension: "", status: "", `type of sensor`: "level", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n181:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n164)<-[:send_data]-(PLC)-[:send_data]->(n165:actuator:`control-devices`:`physical-devices` {name: "water-flow-valve3", brand: "", model: "", dimension: "", status: "", `type of actuator`: "valve", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: ""})<-[:has_actuator]-(n67),
(n257:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n182:pipe:`process-devices`:`physical-devices` {name: "pipe3", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:flow_process]->(n60)-[:has_sensor]->(n166:sensor:`control-devices`:`physical-devices` {name: "water-flow-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "water flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n167:sensor:`control-devices`:`physical-devices` {name: "water-flow-sensor2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "water flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:is_measured]-(n387:variable:logical {`variable name`: "water-flow2", type: "controlled", `sample time`: "", `operation range`: ""}),
(n60)-[:flow_process]->(n61)-[:has_sensor]->(n167),
(n82)-[:has_actuator]->(n170),
(n64)-[:has_actuator]->(n171),
(n53)-[:flow_process]->(n179)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor2", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n251:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n179)-[:has_sensor]->(n181),
(n59)-[:has_sensor]->(n137:sensor:`control-devices`:`physical-devices` {name: "camera1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "digital camera", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n136)-[:flow_process]->(n182)<-[:flow_process]-(n59),
(n257)<-[:has_sensor]-(n182)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor3", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n201:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor7", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n259:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor6", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor {name: "sampler-sensor6", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n183:pipe:`process-devices`:`physical-devices` {name: "pipe6", brand: "", model: "", dimension: "", type: "pipe", material: ""})-[:flow_process]->(n60),
(n267:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor9", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor6", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n183)<-[:flow_process]-(n139)-[:has_sensor]->(n141)<-[:has_sensor]-(n62)-[:flow_process]->(n183)-[:has_sensor]->(n259),
(n186)<-[:has_sensor]-(n184)-[:has_sensor]->(:sensor {name: "sampler-sensor5", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n266:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor9", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n184)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor5", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n265:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor9", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n176)-[:is_manipulated]->(n221:controller:logical {`controller name`: "air-flow-controller2", type: "", `sample time`: "", parameters: ""})-[:is_implemented]->(PLC)<-[:is_implemented]-(n175:controller:logical {`controller name`: "air-flow-controller3", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp3", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n187:controller:logical {`controller name`: "air-recovery-controller3", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp3", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n190:controller:logical {`controller name`: "metal-recovery-controller1", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp1", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n212:controller:logical {`controller name`: "air-recovery-controller1", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp1", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n222:controller:logical {`controller name`: "air-flow-controller1", type: "", `sample time`: "", parameters: ""})-[:is_implemented]->(PLC)<-[:is_implemented]-(n213:controller:logical {`controller name`: "level-controller5", type: "", `sample time`: "", parameters: ""}),
(n149)-[:flow_process]->(n192)<-[:flow_process]-(n150),
(n145)-[:flow_process]->(n196:pipe:`process-devices`:`physical-devices` {name: "pipe8", brand: "", model: "", dimension: "", type: "pipe", material: ""})<-[:flow_process]-(n144),
(n263:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor8", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor8", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n196)-[:has_sensor]->(n148),
(n154)-[:flow_process]->(n198)-[:flow_process]->(:process {name: "concentrate thickening", stage: ""}),
(n201)<-[:has_sensor]-(n194)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor7", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n256:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n197)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor12", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n268:sensor:`control-devices`:`physical-devices` {name: "pipe-flow-sensor11", brand: "", model: "", dimension: "", status: "", `type of sensor`: "flow", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n174)-[:is_controlled]->(n221)<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp2", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n211:controller:logical {`controller name`: "air-recovery-controller2", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp2", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n190)<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp4", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n209:controller:logical {`controller name`: "air-recovery-controller4", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp4", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n219:controller:logical {`controller name`: "air-flow-controller4", type: "", `sample time`: "", parameters: ""})-[:is_implemented]->(PLC)<-[:is_implemented]-(n223:controller:logical {`controller name`: "level-controller4", type: "", `sample time`: "", parameters: ""}),
(n224:controller:logical {`controller name`: "level-controller3", type: "", `sample time`: "", parameters: ""})-[:is_implemented]->(PLC)<-[:is_implemented]-(n220:controller:logical {`controller name`: "air-flow-controller5", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp5", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n210:controller:logical {`controller name`: "air-recovery-controller5", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp5", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n190)<-[:is_manipulated]-(:variable:logical {`variable name`: "cell-level-sp1", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n226:controller:logical {`controller name`: "level-controller1", type: "", `sample time`: "", parameters: ""})<-[:is_controlled]-(:variable:logical {`variable name`: "cell-level1", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n103),
(n214)-[:is_controlled]->(n213)<-[:is_set_point]-(n227:variable:logical {`variable name`: "cell-level-sp5", type: "set point", `sample time`: "", `operation range`: ""}),
(n105)<-[:is_measured]-(:variable:logical {`variable name`: "cell-level2", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n225:controller:logical {`controller name`: "level-controller2", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp2", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n190)<-[:is_manipulated]-(:variable:logical {`variable name`: "cell-level-sp3", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n224)<-[:is_controlled]-(:variable:logical {`variable name`: "cell-level3", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n106),
(n107)<-[:is_measured]-(:variable:logical {`variable name`: "cell-level4", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n223)<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp4", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n190)<-[:is_manipulated]-(n227),
(n232)-[:is_manipulated]->(n213),
(n91)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture1", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n226)-[:is_implemented]->(PLC)<-[:is_implemented]-(n283:controller:logical {name: "level-controller11", type: "", `sample time`: "", parameters: ""}),
(n92)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture2", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n225)-[:is_implemented]->(PLC)<-[:is_implemented]-(n277:controller:logical {name: "level-controller12", type: "", `sample time`: "", parameters: ""}),
(n93)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture3", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n224),
(n241)-[:is_controlled]->(n220)<-[:is_manipulated]-(:variable:logical {`variable name`: "valve-air-flow-aperture5", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n79),
(n94)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture4", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n223),
(n120)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow1", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n222)<-[:is_manipulated]-(:variable:logical {`variable name`: "valve-air-flow-aperture1", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n75),
(n124)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow4", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n219)<-[:is_manipulated]-(:variable:logical {`variable name`: "valve-air-flow-aperture4", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n78),
(n77)<-[:action_in]-(:variable:logical {`variable name`: "valve-air-flow-aperture3", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n175)<-[:is_controlled]-(n245),
(n251)<-[:has_sensor]-(n249)-[:has_sensor]->(:sensor:`control-devices`:`physical-devices` {name: "sampler-sensor1", brand: "", model: "", dimension: "", status: "", `type of sensor`: "material sampler", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})-[:send_data]->(PLC)<-[:send_data]-(n255:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor4", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""}),
(n249)-[:has_sensor]->(n252),
(n256)<-[:has_sensor]-(n253)-[:has_sensor]->(n255),
(n264)<-[:has_sensor]-(n192)-[:has_sensor]->(n262),
(n263)<-[:has_sensor]-(n196)-[:flow_process]->(n65),
(n266)<-[:has_sensor]-(n193)-[:has_sensor]->(n265),
(n193)-[:has_sensor]->(n267),
(PLC)<-[:send_data]-(:sensor:`control-devices`:`physical-devices` {name: "pipe-density-sensor11", brand: "", model: "", dimension: "", status: "", `type of sensor`: "density", unit: "", `power supply`: "", `operating range`: "", `operating temperature`: "", interfaces: "", `communication protocol`: "", `sample time`: ""})<-[:has_sensor]-(n198)-[:has_sensor]->(n268),
(n130)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow11", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n282:controller:logical {name: "air-flow-controller11", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp11", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n276:controller:logical {name: "air-recovery-controller11", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp11", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n272:controller:logical {name: "metal-recovery-controller3", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp12", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n275:controller:logical {name: "air-recovery-controller12", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp12", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n281:controller:logical {name: "air-flow-controller12", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "valve-air-flow-aperture12", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n86),
(n278)-[:is_controlled]->(n277)<-[:is_set_point]-(n284:variable:logical {`variable name`: "cell-level-sp12", type: "set point", `sample time`: "", `operation range`: ""}),
(n287)-[:is_controlled]->(n283)<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp11", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n272)<-[:is_manipulated]-(n284),
(n58)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture12", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n277),
(n95)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture11", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n283),
(n85)<-[:action_in]-(:variable:logical {`variable name`: "valve-air-flow-aperture11", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n282)-[:is_implemented]->(PLC)<-[:is_implemented]-(n281),
(n270)-[:is_controlled]->(n281),
(n339)-[:is_manipulated]->(n292:controller:logical {name: "air-flow-controller8", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp8", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n294:controller:logical {name: "air-recovery-controller8", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp8", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n297:controller:logical {name: "metal-recovery-controller2", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp10", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n305:controller:logical {name: "air-recovery-controller10", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp10", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n315:controller:logical {name: "air-flow-controller10", type: "", `sample time`: "", parameters: ""})<-[:is_controlled]-(:variable:logical {`variable name`: "air-flow10", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n129),
(n293)-[:is_manipulated]->(n314:controller:logical {name: "air-flow-controller9", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp9", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n304:controller:logical {name: "air-recovery-controller9", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp9", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n297)<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp7", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n302:controller:logical {name: "air-recovery-controller7", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp7", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n312:controller:logical {name: "air-flow-controller7", type: "", `sample time`: "", parameters: ""})<-[:is_controlled]-(n336),
(n125)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow6", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n313:controller:logical {name: "air-flow-controller6", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp6", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n303:controller:logical {name: "air-recovery-controller6", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp6", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n297)<-[:is_manipulated]-(:variable:logical {`variable name`: "cell-level-sp10", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n319:controller:logical {name: "level-controller10", type: "", `sample time`: "", parameters: ""})<-[:is_controlled]-(:variable:logical {`variable name`: "cell-level10", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n115),
(n111)<-[:is_measured]-(:variable:logical {`variable name`: "cell-level6", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n306:controller:logical {name: "level-controller6", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(n320:variable:logical {`variable name`: "cell-level-sp6", type: "set point", `sample time`: "", `operation range`: ""}),
(n328)-[:is_controlled]->(n318:controller:logical {name: "level-controller9", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp9", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n297)<-[:is_manipulated]-(:variable:logical {`variable name`: "cell-level-sp8", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n317:controller:logical {name: "level-controller8", type: "", `sample time`: "", parameters: ""})<-[:is_controlled]-(n330),
(n112)<-[:is_measured]-(:variable:logical {`variable name`: "cell-level7", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n316:controller:logical {name: "level-controller7", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp7", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n297)<-[:is_manipulated]-(n320),
(n98)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture6", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n306)-[:is_implemented]->(PLC)<-[:is_implemented]-(n315),
(n55)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture10", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n319)-[:is_implemented]->(PLC)<-[:is_implemented]-(n318),
(n101)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture9", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n318),
(n100)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture8", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n317)-[:is_implemented]->(PLC)<-[:is_implemented]-(n316),
(n70)<-[:action_in]-(:variable:logical {`variable name`: "valve-air-flow-aperture6", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n313)-[:is_implemented]->(PLC)<-[:is_implemented]-(n353:controller:logical {name: "air-flow-controller13", type: "", `sample time`: "", parameters: ""}),
(n99)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture7", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n316),
(n341)-[:is_manipulated]->(n315),
(n337)-[:is_manipulated]->(n312)-[:is_implemented]->(PLC)<-[:is_implemented]-(n354:controller:logical {name: "air-flow-controller14", type: "", `sample time`: "", parameters: ""}),
(n127)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow8", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n292)-[:is_implemented]->(PLC)<-[:is_implemented]-(n349:controller:logical {name: "level-controller13", type: "", `sample time`: "", parameters: ""}),
(n291)-[:is_controlled]->(n314)-[:is_implemented]->(PLC)<-[:is_implemented]-(n355:controller:logical {name: "level-controller14", type: "", `sample time`: "", parameters: ""}),
(n361)-[:is_controlled]->(n354)<-[:is_set_point]-(:variable:logical {`variable name`: "airflow-sp14", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n348:controller:logical {name: "air-recovery-controller14", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp14", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n344:controller:logical {name: "metal-recovery-controller4", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp13", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n347:controller:logical {name: "air-recovery-controller13", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp13", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n353)<-[:is_manipulated]-(n343),
(n350)-[:is_controlled]->(n349)<-[:is_set_point]-(n356:variable:logical {`variable name`: "cell-level-sp13", type: "set point", `sample time`: "", `operation range`: ""}),
(n359)-[:is_controlled]->(n355)<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp14", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n344)<-[:is_manipulated]-(n356),
(n96)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture13", type: "", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n349),
(n66)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture14", type: "", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n355),
(n362)-[:is_manipulated]->(n354),
(n132)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow13", type: "", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n353),
(n135)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow16", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n375:controller:logical {name: "air-flow-controller16", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-flow-sp16", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n369:controller:logical {name: "air-recovery-controller16", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "air-recovery-sp16", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n365:controller:logical {name: "metal-recovery-controller5", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-recovery-sp15", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n368:controller:logical {name: "air-recovery-controller15", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "air-flow-sp15", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n374:controller:logical {name: "air-flow-controller15", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(:variable:logical {`variable name`: "valve-air-flow-aperture15", type: "manipulated", `sample time`: "", `operation range`: ""})-[:action_in]->(n83),
(n118)<-[:is_measured]-(:variable:logical {`variable name`: "cell-level15", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n370:controller:logical {name: "level-controller15", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(n377:variable:logical {`variable name`: "cell-level-sp15", type: "set point", `sample time`: "", `operation range`: ""}),
(n380)-[:is_controlled]->(n376:controller:logical {name: "level-controller16", type: "", `sample time`: "", parameters: ""})<-[:is_set_point]-(:variable:logical {`variable name`: "cell-level-sp16", type: "set point", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n365)<-[:is_manipulated]-(n377),
(n97)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture15", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n370)-[:is_implemented]->(PLC)<-[:is_implemented]-(n376),
(n69)<-[:action_in]-(:variable:logical {`variable name`: "valve-level-aperture16", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n376),
(n84)<-[:action_in]-(:variable:logical {`variable name`: "valve-air-flow-aperture16", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n375)-[:is_implemented]->(PLC)<-[:is_implemented]-(n392:controller:logical {name: "water-flow-controller1", type: "", `sample time`: "", parameters: ""}),
(n134)<-[:is_measured]-(:variable:logical {`variable name`: "air-flow15", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n374)-[:is_implemented]->(PLC)<-[:is_implemented]-(n386:controller:logical {name: "water-flow-controller2", type: "", `sample time`: "", parameters: ""}),
(n387)-[:is_controlled]->(n386)<-[:is_set_point]-(:variable:logical {`variable name`: "water-flow-sp2", type: "set point", `sample time`: "", `operation range`: ""}),
(:variable:logical {`variable name`: "water-flow-sp3", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n391:controller:logical {name: "water-flow-controller3", type: "", `sample time`: "", parameters: ""})<-[:is_controlled]-(:variable:logical {`variable name`: "water-flow3", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n168),
(:variable:logical {`variable name`: "water-flow-sp4", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n390:controller:logical {name: "water-flow-controller4", type: "", `sample time`: "", parameters: ""})<-[:is_manipulated]-(n385),
(:variable:logical {`variable name`: "water-flow-sp1", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n392)<-[:is_controlled]-(:variable:logical {`variable name`: "water-flow1", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_measured]->(n166),
(n395)-[:is_manipulated]->(n386),
(n162)<-[:action_in]-(:variable:logical {`variable name`: "valve-water-flow-aperture1", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n392),
(n165)<-[:action_in]-(:variable:logical {`variable name`: "valve-water-flow-aperture3", type: "manipulated", `sample time`: "", `operation range`: ""})-[:is_manipulated]->(n391)-[:is_implemented]->(PLC)<-[:is_implemented]-(n390),
(n169)<-[:is_measured]-(:variable:logical {`variable name`: "water-flow4", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n390),
(:variable:logical {`variable name`: "feed-flow-sp1", type: "set point", `sample time`: "", `operating range`: ""})-[:is_set_point]->(n403)<-[:is_manipulated]-(n401),
(`FS-feed`)<-[:is_measured]-(:variable:logical {`variable name`: "feed-flow1", type: "controlled", `sample time`: "", `operating range`: ""})-[:is_controlled]->(n403),
(n137)-[:send_data]->(PLC)-[:send_data]->(`VF-feed`),
(n158)-[:send_data]->(PLC),
(:variable:logical {`variable name`: "air-recovery1", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n212),
(:variable:logical {`variable name`: "air-recovery2", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n211),
(:variable:logical {`variable name`: "air-recovery3", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n187),
(:variable:logical {`variable name`: "air-recovery4", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n209),
(:variable:logical {`variable name`: "air-recovery5", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n210),
(:variable:logical {`variable name`: "metal-recovery1", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n190)<-[:is_set_point]-(:variable:logical {`variable name`: "metal-recovery-sp1", type: "set point", `sample time`: "", `operation range`: ""}),
(:variable:logical {`variable name`: "air-recovery-sp11", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n276),
(:variable:logical {`variable name`: "air-recovery-sp12", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n275),
(:variable:logical {`variable name`: "metal-recovery-sp3", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n272)<-[:is_controlled]-(:variable:logical {`variable name`: "metal-recovery3", type: "controlled", `sample time`: "", `operation range`: ""}),
(:variable:logical {`variable name`: "air-recovery10", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n305),
(:variable:logical {`variable name`: "air-recovery9", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n304),
(:variable:logical {`variable name`: "air-recovery8", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n294),
(:variable:logical {`variable name`: "air-recovery7", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n302),
(:variable:logical {`variable name`: "air-recovery6", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n303),
(:variable:logical {`variable name`: "metal-recovery-sp2", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n297)<-[:is_controlled]-(:variable:logical {`variable name`: "metal-recovery2", type: "controlled", `sample time`: "", `operation range`: ""}),
(:variable:logical {`variable name`: "air-recovery14", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n348),
(:variable:logical {`variable name`: "air-recovery13", type: "controlled", `sample time`: "", `operation range`: ""})-[:is_controlled]->(n347),
(:variable:logical {`variable name`: "metal-recovery-sp4", type: "set point", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n344)<-[:is_controlled]-(:variable:logical {`variable name`: "metal-recovery4", type: "controlled", `sample time`: "", `operation range`: ""}),
(:variable:logical {`variable name`: "metal-recovery-sp5", type: "", `sample time`: "", `operation range`: ""})-[:is_set_point]->(n365)<-[:is_controlled]-(:variable:logical {`variable name`: "metal-recovery5", type: "", `sample time`: "", `operation range`: ""}),
(:variable:logical {`variable name`: "air-recovery16", type: "controlled", `sample time`: "", `operating range`: ""})-[:is_controlled]->(n369),
(:variable:logical {`variable name`: "air-recovery15", type: "controlled", `sample time`: "", `operating range`: ""})-[:is_controlled]->(n368),
(n190)-[:is_implemented {`software used`: ""}]->(`Engineering Station`)<-[:is_implemeted {`software used`: ""}]-(n272),
(`San Pedro mining`)-[:has_process]->(:process {name: "flotation", stage: ""})
